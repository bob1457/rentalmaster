/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isDataAction: {
                serializedName: "isDataAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            actionType: {
                serializedName: "actionType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ErrorResponse = {
    type: {
        name: "Composite",
        className: "ErrorResponse",
        modelProperties: {
            error: {
                serializedName: "error",
                type: {
                    name: "Composite",
                    className: "ErrorDetail"
                }
            }
        }
    }
};
export const ErrorDetail = {
    type: {
        name: "Composite",
        className: "ErrorDetail",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            target: {
                serializedName: "target",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorDetail"
                        }
                    }
                }
            },
            additionalInfo: {
                serializedName: "additionalInfo",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ErrorAdditionalInfo"
                        }
                    }
                }
            }
        }
    }
};
export const ErrorAdditionalInfo = {
    type: {
        name: "Composite",
        className: "ErrorAdditionalInfo",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            info: {
                serializedName: "info",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: { type: { name: "any" } }
                }
            }
        }
    }
};
export const CheckNameAvailabilityRequest = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityRequest",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CheckNameAvailabilityResponse = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResponse",
        modelProperties: {
            nameAvailable: {
                serializedName: "nameAvailable",
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LinkNotificationHubParameters = {
    type: {
        name: "Composite",
        className: "LinkNotificationHubParameters",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                required: true,
                type: {
                    name: "String"
                }
            },
            connectionString: {
                serializedName: "connectionString",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LinkedNotificationHub = {
    type: {
        name: "Composite",
        className: "LinkedNotificationHub",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CommunicationServiceResourceList = {
    type: {
        name: "Composite",
        className: "CommunicationServiceResourceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CommunicationServiceResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const TaggedResource = {
    type: {
        name: "Composite",
        className: "TaggedResource",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const CommunicationServiceKeys = {
    type: {
        name: "Composite",
        className: "CommunicationServiceKeys",
        modelProperties: {
            primaryKey: {
                serializedName: "primaryKey",
                type: {
                    name: "String"
                }
            },
            secondaryKey: {
                serializedName: "secondaryKey",
                type: {
                    name: "String"
                }
            },
            primaryConnectionString: {
                serializedName: "primaryConnectionString",
                type: {
                    name: "String"
                }
            },
            secondaryConnectionString: {
                serializedName: "secondaryConnectionString",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RegenerateKeyParameters = {
    type: {
        name: "Composite",
        className: "RegenerateKeyParameters",
        modelProperties: {
            keyType: {
                serializedName: "keyType",
                type: {
                    name: "Enum",
                    allowedValues: ["Primary", "Secondary"]
                }
            }
        }
    }
};
export const DomainPropertiesVerificationStates = {
    type: {
        name: "Composite",
        className: "DomainPropertiesVerificationStates",
        modelProperties: {
            domain: {
                serializedName: "Domain",
                type: {
                    name: "Composite",
                    className: "VerificationStatusRecord"
                }
            },
            spf: {
                serializedName: "SPF",
                type: {
                    name: "Composite",
                    className: "VerificationStatusRecord"
                }
            },
            dkim: {
                serializedName: "DKIM",
                type: {
                    name: "Composite",
                    className: "VerificationStatusRecord"
                }
            },
            dkim2: {
                serializedName: "DKIM2",
                type: {
                    name: "Composite",
                    className: "VerificationStatusRecord"
                }
            },
            dmarc: {
                serializedName: "DMARC",
                type: {
                    name: "Composite",
                    className: "VerificationStatusRecord"
                }
            }
        }
    }
};
export const VerificationStatusRecord = {
    type: {
        name: "Composite",
        className: "VerificationStatusRecord",
        modelProperties: {
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            errorCode: {
                serializedName: "errorCode",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DomainPropertiesVerificationRecords = {
    type: {
        name: "Composite",
        className: "DomainPropertiesVerificationRecords",
        modelProperties: {
            domain: {
                serializedName: "Domain",
                type: {
                    name: "Composite",
                    className: "DnsRecord"
                }
            },
            spf: {
                serializedName: "SPF",
                type: {
                    name: "Composite",
                    className: "DnsRecord"
                }
            },
            dkim: {
                serializedName: "DKIM",
                type: {
                    name: "Composite",
                    className: "DnsRecord"
                }
            },
            dkim2: {
                serializedName: "DKIM2",
                type: {
                    name: "Composite",
                    className: "DnsRecord"
                }
            },
            dmarc: {
                serializedName: "DMARC",
                type: {
                    name: "Composite",
                    className: "DnsRecord"
                }
            }
        }
    }
};
export const DnsRecord = {
    type: {
        name: "Composite",
        className: "DnsRecord",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            ttl: {
                serializedName: "ttl",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const DomainResourceList = {
    type: {
        name: "Composite",
        className: "DomainResourceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DomainResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VerificationParameter = {
    type: {
        name: "Composite",
        className: "VerificationParameter",
        modelProperties: {
            verificationType: {
                serializedName: "verificationType",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EmailServiceResourceList = {
    type: {
        name: "Composite",
        className: "EmailServiceResourceList",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EmailServiceResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SenderUsernameResourceCollection = {
    type: {
        name: "Composite",
        className: "SenderUsernameResourceCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SenderUsernameResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const NameAvailabilityParameters = {
    type: {
        name: "Composite",
        className: "NameAvailabilityParameters",
        modelProperties: Object.assign({}, CheckNameAvailabilityRequest.type.modelProperties)
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties)
    }
};
export const CommunicationServiceResourceUpdate = {
    type: {
        name: "Composite",
        className: "CommunicationServiceResourceUpdate",
        modelProperties: Object.assign(Object.assign({}, TaggedResource.type.modelProperties), { linkedDomains: {
                serializedName: "properties.linkedDomains",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const UpdateDomainRequestParameters = {
    type: {
        name: "Composite",
        className: "UpdateDomainRequestParameters",
        modelProperties: Object.assign(Object.assign({}, TaggedResource.type.modelProperties), { userEngagementTracking: {
                serializedName: "properties.userEngagementTracking",
                type: {
                    name: "String"
                }
            } })
    }
};
export const EmailServiceResourceUpdate = {
    type: {
        name: "Composite",
        className: "EmailServiceResourceUpdate",
        modelProperties: Object.assign({}, TaggedResource.type.modelProperties)
    }
};
export const CommunicationServiceResource = {
    type: {
        name: "Composite",
        className: "CommunicationServiceResource",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, hostName: {
                serializedName: "properties.hostName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, dataLocation: {
                serializedName: "properties.dataLocation",
                type: {
                    name: "String"
                }
            }, notificationHubId: {
                serializedName: "properties.notificationHubId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, immutableResourceId: {
                serializedName: "properties.immutableResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, linkedDomains: {
                serializedName: "properties.linkedDomains",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const DomainResource = {
    type: {
        name: "Composite",
        className: "DomainResource",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, dataLocation: {
                serializedName: "properties.dataLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, fromSenderDomain: {
                serializedName: "properties.fromSenderDomain",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, mailFromSenderDomain: {
                serializedName: "properties.mailFromSenderDomain",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, domainManagement: {
                serializedName: "properties.domainManagement",
                type: {
                    name: "String"
                }
            }, verificationStates: {
                serializedName: "properties.verificationStates",
                type: {
                    name: "Composite",
                    className: "DomainPropertiesVerificationStates"
                }
            }, verificationRecords: {
                serializedName: "properties.verificationRecords",
                type: {
                    name: "Composite",
                    className: "DomainPropertiesVerificationRecords"
                }
            }, userEngagementTracking: {
                serializedName: "properties.userEngagementTracking",
                type: {
                    name: "String"
                }
            } })
    }
};
export const EmailServiceResource = {
    type: {
        name: "Composite",
        className: "EmailServiceResource",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, dataLocation: {
                serializedName: "properties.dataLocation",
                type: {
                    name: "String"
                }
            } })
    }
};
export const SenderUsernameResource = {
    type: {
        name: "Composite",
        className: "SenderUsernameResource",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { dataLocation: {
                serializedName: "properties.dataLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, username: {
                serializedName: "properties.username",
                type: {
                    name: "String"
                }
            }, displayName: {
                serializedName: "properties.displayName",
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const CommunicationServicesCreateOrUpdateHeaders = {
    type: {
        name: "Composite",
        className: "CommunicationServicesCreateOrUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CommunicationServicesDeleteHeaders = {
    type: {
        name: "Composite",
        className: "CommunicationServicesDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DomainsCreateOrUpdateHeaders = {
    type: {
        name: "Composite",
        className: "DomainsCreateOrUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DomainsDeleteHeaders = {
    type: {
        name: "Composite",
        className: "DomainsDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DomainsUpdateHeaders = {
    type: {
        name: "Composite",
        className: "DomainsUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DomainsInitiateVerificationHeaders = {
    type: {
        name: "Composite",
        className: "DomainsInitiateVerificationHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DomainsCancelVerificationHeaders = {
    type: {
        name: "Composite",
        className: "DomainsCancelVerificationHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EmailServicesCreateOrUpdateHeaders = {
    type: {
        name: "Composite",
        className: "EmailServicesCreateOrUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EmailServicesDeleteHeaders = {
    type: {
        name: "Composite",
        className: "EmailServicesDeleteHeaders",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EmailServicesUpdateHeaders = {
    type: {
        name: "Composite",
        className: "EmailServicesUpdateHeaders",
        modelProperties: {
            azureAsyncOperation: {
                serializedName: "azure-asyncoperation",
                type: {
                    name: "String"
                }
            }
        }
    }
};
//# sourceMappingURL=mappers.js.map